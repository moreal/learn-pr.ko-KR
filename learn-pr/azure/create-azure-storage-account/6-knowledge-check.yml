### YamlMime:ModuleUnit
uid: learn.create-azure-storage-account.6-knowledge-check
title: '지식 검사: 저장소 계정 만들기'
durationInMinutes: 3
metadata:
  title: '지식 검사: 저장소 계정 만들기'
  description: 저장소 계정 속성 및 생성에 대한 질문입니다.
  ms.date: 09/24/2018
  author: markjulmar
  ms.author: smmark
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
  ms.openlocfilehash: 16c86b7ec3c7eb7b0d7ea9d243206c6bfe8b36f0
  ms.sourcegitcommit: b21a4b22de591cfa776684ba2eab9ba27248c65d
  ms.translationtype: HT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/19/2018
  ms.locfileid: "46352978"
quiz:
  title: 지식 검사
  questions:
  - content: '두 개의 비디오 파일을 Blob으로 저장한다고 가정합니다. 그 중 하나의 비디오는 중요 비즈니스용이며 여기에는 지리적으로 분산 데이터 센터에서 여러 복사본을 만드는 복제 정책이 필요합니다. 다른 비디오는 중요하지 않으며 로컬 복제 정책으로 충분합니다. True 또는 false: 이러한 제약 조건을 충족하려면 두 개의 Blob이 별도 저장소 계정에 위치해야 합니다.'
    choices:
    - content: "True"
      isCorrect: true
      correctExplanation: 복제 정책은 저장소 계정의 특성입니다. 저장소 계정의 모든 멤버에는 동일한 정책을 사용해야 합니다. 일부 데이터가 지역 복제 전략을 사용하고 다른 데이터가 로컬 복제 전략을 사용해야 하는 경우 두 개의 저장소 계정이 필요합니다.
    - content: "False"
      isCorrect: false
      incorrectExplanation: 복제 정책은 저장소 계정의 특성입니다. 저장소 계정의 모든 멤버에는 동일한 정책을 사용해야 합니다. 일부 데이터가 지역 복제 전략을 사용하고 다른 데이터가 로컬 복제 전략을 사용해야 하는 경우 두 개의 저장소 계정이 필요합니다.
  - content: 저장소 계정의 이름은 다음과 같아야 합니다.
    choices:
    - content: 포함하는 리소스 그룹 내에서 고유해야 합니다.
      isCorrect: false
      incorrectExplanation: 저장소 계정 이름은 API 액세스에 대한 URI의 일부로 사용되므로 전세계에 고유해야 합니다.
    - content: Azure 구독 내에서 고유합니다.
      isCorrect: false
      incorrectExplanation: 저장소 계정 이름은 API 액세스에 대한 URI의 일부로 사용되므로 전세계에 고유해야 합니다.
    - content: 전세계에 고유합니다.
      isCorrect: true
      correctExplanation: 저장소 계정 이름은 API 액세스에 대한 URI의 일부로 사용되므로 전세계에 고유해야 합니다.
  - content: 일반적인 프로젝트에서 저장소 계정을 만드는 경우는?
    choices:
    - content: 처음에 프로젝트를 설정하는 동안
      isCorrect: true
      correctExplanation: 저장소 계정은 프로젝트의 수명 동안 일반적으로 안정적입니다. 프로젝트의 시작 부분에서 만드는 것이 일반적입니다.
    - content: 배포 후에 프로젝트를 실행하는 경우
      isCorrect: false
      incorrectExplanation: 저장소 계정은 프로젝트의 수명 동안 일반적으로 안정적입니다. 프로젝트의 시작 부분에서 만드는 것이 일반적입니다.
    - content: 끝으로 리소스를 정리하는 동안
      isCorrect: false
      incorrectExplanation: 저장소 계정은 프로젝트의 수명 동안 일반적으로 안정적입니다. 프로젝트의 시작 부분에서 만드는 것이 일반적입니다.
