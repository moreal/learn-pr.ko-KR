### YamlMime:ModuleUnit
uid: learn.choose-storage-approach-in-azure.4-transactions
metadata:
  title: <span data-ttu-id="ba192-101">트랜잭션에서 여러 작업 그룹화</span><span class="sxs-lookup"><span data-stu-id="ba192-101">Group multiple operations in a transaction</span></span>
  description: <span data-ttu-id="ba192-102">트랜잭션에서 여러 작업 그룹화</span><span class="sxs-lookup"><span data-stu-id="ba192-102">Group multiple operations in a transaction</span></span>
  ms.date: 09/24/2018
  author: mimig1
  ms.author: mimig
  ms.topic: interactive-tutorial
  ms.prod: learning-azure
  ms.openlocfilehash: 898422fb6f083d12691d5488ef3ea9b6ef596384
  ms.sourcegitcommit: b21a4b22de591cfa776684ba2eab9ba27248c65d
  ms.translationtype: HT
  ms.contentlocale: ko-KR
  ms.lasthandoff: 09/19/2018
  ms.locfileid: "46351817"
title: <span data-ttu-id="ba192-103">트랜잭션에서 여러 작업 그룹화</span><span class="sxs-lookup"><span data-stu-id="ba192-103">Group multiple operations in a transaction</span></span>
durationInMinutes: 5
content: >
  [!include[](includes/4-transactions.md)]
quiz:
  title: <span data-ttu-id="ba192-104">지식 검사</span><span class="sxs-lookup"><span data-stu-id="ba192-104">Check your knowledge</span></span>
  questions:
  - content: <span data-ttu-id="ba192-105">어떤 유형의 트랜잭션 데이터베이스 시스템이 제품 데이터에 가장 적합할까요?</span><span class="sxs-lookup"><span data-stu-id="ba192-105">Which type of transactional database system would work best for product data?</span></span>
    choices:
    - content: <span data-ttu-id="ba192-106">OLAP</span><span class="sxs-lookup"><span data-stu-id="ba192-106">OLAP</span></span>
      isCorrect: false
      incorrectExplanation: <span data-ttu-id="ba192-107">OLTP 시스템은 많은 수의 사용자를 지원하고, 응답 시간이 빠르며, 많은 양의 데이터를 처리하고, 가용성이 높으며, 작거나 비교적 간단한 트랜잭션에 적합합니다.</span><span class="sxs-lookup"><span data-stu-id="ba192-107">OLTP systems support a large set of users, have quick response times, handle large volumes of data, are highly available, and are great for small or relatively simple transactions.</span></span>
    - content: <span data-ttu-id="ba192-108">OLTP</span><span class="sxs-lookup"><span data-stu-id="ba192-108">OLTP</span></span>
      isCorrect: true
      correctExplanation: <span data-ttu-id="ba192-109">OLTP 시스템은 많은 수의 사용자를 지원하고, 응답 시간이 빠르며, 많은 양의 데이터를 처리하고, 가용성이 높으며, 작거나 비교적 간단한 트랜잭션에 적합합니다.</span><span class="sxs-lookup"><span data-stu-id="ba192-109">OLTP systems support a large set of users, have quick response times, handle large volumes of data, are highly available, and are great for small or relatively simple transactions.</span></span>
  - content: <span data-ttu-id="ba192-110">인벤토리를 업데이트하고 지불을 처리하는 작업이 동일한 트랜잭션에 있다고 가정해보세요.</span><span class="sxs-lookup"><span data-stu-id="ba192-110">Suppose the operations to update inventory and process payments are in the same transaction.</span></span> <span data-ttu-id="ba192-111">사용자가 전액에 대해 매장 크레딧을 적용하려고 하면서, 전화와 랩톱을 통해 동시에 동일한 주문을 제출했습니다.</span><span class="sxs-lookup"><span data-stu-id="ba192-111">A user is attempting to apply store credit for the full amount, and submitted the exact same order via phone and laptop at the same time.</span></span> <span data-ttu-id="ba192-112">백그라운드에 있는 데이터베이스가 ACID 호환 데이터베이스입니다. 어떻게 될까요?</span><span class="sxs-lookup"><span data-stu-id="ba192-112">The database behind the scenes is an ACID-compliant database, what would happen?</span></span>
    choices:
    - content: <span data-ttu-id="ba192-113">두 주문이 모두 처리되어 매장 내 크레딧이 사용됩니다.</span><span class="sxs-lookup"><span data-stu-id="ba192-113">Both orders would be processed and use the in-store credit.</span></span>
      isCorrect: false
      incorrectExplanation: <span data-ttu-id="ba192-114">두 번째 주문에서 매장 내 크레딧이 이미 사용되었다고 판단되면 트랜잭션이 롤백됩니다.</span><span class="sxs-lookup"><span data-stu-id="ba192-114">Once the second order determined that the in-store credit has already been used, it would roll back the transaction.</span></span>
    - content: <span data-ttu-id="ba192-115">하나의 주문이 처리되어 매장 내 크레딧이 사용되지만, 다른 주문은 장바구니에 있는 항목의 남은 재고를 업데이트하되 주문은 완료되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ba192-115">One order would be processed and use the in-store credit, and the other order would update the remaining inventory for the items in the basket, but would not complete the order.</span></span>
      isCorrect: false
      incorrectExplanation: <span data-ttu-id="ba192-116">두 번째 주문에서 매장 내 크레딧이 이미 사용되었다고 판단되면 트랜잭션이 롤백됩니다.</span><span class="sxs-lookup"><span data-stu-id="ba192-116">Once the second order determined that the in-store credit has already been used, it would roll back the transaction.</span></span>
    - content: <span data-ttu-id="ba192-117">한 주문은 처리되고 매장 내 크레딧이 사용되지만 다른 주문은 처리되지 않습니다.</span><span class="sxs-lookup"><span data-stu-id="ba192-117">One order would be processed and use the in-store credit, and the other order would not be processed.</span></span>
      isCorrect: true
      correctExplanation: <span data-ttu-id="ba192-118">두 번째 주문에서 매장 내 크레딧이 이미 사용되었다고 판단되면 트랜잭션이 롤백됩니다.</span><span class="sxs-lookup"><span data-stu-id="ba192-118">Once the second order determined that the in-store credit has already been used, it would roll back the transaction.</span></span>
